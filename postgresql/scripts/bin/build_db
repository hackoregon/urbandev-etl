#!/usr/bin/env bash
set -e


# You must have a postgres database instance installed
# with psql on your path and peer authentication
#
# You must alsot have PostGIS installed for every after the 'Spatial' seciont
# to run properly
#
# Example usage:
#   ./build_db


# ==========
# Parameters
# ==========

# specify the owner of the database and database name
owner=postgres
db=urbandev

# ==========


# path to the directory of this script
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# location of sql and csv files
SQL=$SCRIPTDIR/../sql


# check if we are missing the crime database dump and exit before doing anything
if [ ! -f $SQL/CREATE-TABLE-crime.sql ];
then
    cat << EOF
ERROR: Missing \`CREATE-TABLE-crime.sql\` file because it is too big for github (110MB).

You can download from https://files.slack.com/files-pri/T0LK1LTK3-F1C61CU04/download/create-table-crime.sql
Then place in \`postgresql/scripts/data-loaders/data\` before re-running script
EOF
    exit 1
fi


# Create database
psql -f $SQL/CREATE-DATABASE-urbandev.sql -v owner=$owner -v db=$db


# Create a table to document the provenance of data
psql -f $SQL/CREATE-TABLE-data_source.sql $db


# Insert source data for the tables to be loaded
psql -f $SQL/INSERT-data_source.sql $db


# Create the data tables
# neighborhoods and tracts/block groups
psql -f $SQL/CREATE-TABLE-pdx_neighborhood.sql $db
psql -f $SQL/CREATE-TABLE-census_tracts_in_pdx_neighborhood.sql $db
psql -f $SQL/CREATE-TABLE-census_block_groups_in_pdx_neighborhood.sql $db
# census data
psql -f $SQL/CREATE-TABLE-acs_educational_attainment_2005_2009_blkgrp.sql $db
psql -f $SQL/CREATE-TABLE-acs_educational_attainment_2010_2014_blkgrp.sql $db
psql -f $SQL/CREATE-TABLE-acs_household_income_2009_blkgrp.sql $db
psql -f $SQL/CREATE-TABLE-acs_household_income_2014_blkgrp.sql $db
psql -f $SQL/CREATE-TABLE-census_educational_attainment_1990_blkgrp.sql $db
psql -f $SQL/CREATE-TABLE-census_educational_attainment_2000_blkgrp.sql $db
psql -f $SQL/CREATE-TABLE-census_educational_attainment.sql $db
psql -f $SQL/CREATE-TABLE-census_households_by_income.sql $db
psql -f $SQL/CREATE-TABLE-census_housing_units_tenure.sql $db
psql -f $SQL/CREATE-TABLE-census_persons_by_race.sql $db
psql -f $SQL/CREATE-TABLE-census_persons_by_race_blkgrp.sql $db
psql -f $SQL/CREATE-TABLE-census_total_population.sql $db
psql -f $SQL/CREATE-TABLE-census_total_population_blkgrp.sql $db
psql -f $SQL/CREATE-TABLE-zillow_1996_2016.sql $db


# Load the data into the newly created tables
# ./load <database name> <table name> <number of lines to skip>
SKIP_ONE=1
SKIP_TWO=2
# neighborhoods and tracts/block groups
$SCRIPTDIR/load_csv $db pdx_neighborhood $SKIP_ONE
$SCRIPTDIR/load_csv $db census_tracts_in_pdx_neighborhood $SKIP_ONE
$SCRIPTDIR/load_csv $db census_block_groups_in_pdx_neighborhood $SKIP_ONE
# census data
$SCRIPTDIR/load_csv $db acs_educational_attainment_2005_2009_blkgrp $SKIP_ONE
$SCRIPTDIR/load_csv $db acs_educational_attainment_2010_2014_blkgrp $SKIP_ONE
$SCRIPTDIR/load_csv $db acs_household_income_2009_blkgrp $SKIP_ONE
$SCRIPTDIR/load_csv $db acs_household_income_2014_blkgrp $SKIP_ONE
$SCRIPTDIR/load_csv $db census_educational_attainment_1990_blkgrp $SKIP_ONE
$SCRIPTDIR/load_csv $db census_educational_attainment_2000_blkgrp $SKIP_ONE
$SCRIPTDIR/load_csv $db census_educational_attainment $SKIP_TWO
$SCRIPTDIR/load_csv $db census_households_by_income $SKIP_ONE
$SCRIPTDIR/load_csv $db census_housing_units_tenure $SKIP_TWO
$SCRIPTDIR/load_csv $db census_persons_by_race $SKIP_ONE
$SCRIPTDIR/load_csv $db census_persons_by_race_blkgrp $SKIP_ONE
$SCRIPTDIR/load_csv $db census_total_population $SKIP_ONE
$SCRIPTDIR/load_csv $db census_total_population_blkgrp $SKIP_ONE
$SCRIPTDIR/load_csv $db zillow_1996_2016 $SKIP_ONE


# Update the loaded data to point to the meta data in the data_source table
psql -f $SQL/UPDATE-data_source_id.sql $db


# Create indexes
psql -f $SQL/CREATE-INDEXES.sql $db


# =================
# Load Spatial Data
# =================

# enable PostGIS and add projection that the shapefiles from NHGIS are provided in
$SCRIPTDIR/init_postgis $db


# load pre-processed spatial tables from sql dumps
# to generate these dumps you need to run `spatial_preprocess` script
psql -f $SQL/CREATE-TABLE-INSERT-zillow_neighborhoods.sql $db
# blkgrps from multiple years
psql -f $SQL/CREATE-TABLE-INSERT-blkgrps.sql $db
# percentage of blkgrp from each year for every zillow neighborhood
psql -f $SQL/CREATE-TABLE-INSERT-zillow_blkgrps.sql $db


# load spatial data ported from MySQL
psql -f $SQL/CREATE-TABLE-crime.sql $db
psql -f $SQL/CREATE-TABLE-permits.sql $db
psql -f $SQL/CREATE-TABLE-demolitions.sql $db


# ================================
# Craigslist Apartment Rental Data
# ================================

psql -f $SQL/CREATE-TABLE-craigslist_neighborhood_average_rental.sql $db
$SCRIPTDIR/load_csv $db craigslist_neighborhood_average_rental $SKIP_ONE


# ======================================
# Data Aggregated by Zillow Neighborhood
# ======================================

# enable tablefunc extension for generating crosstabs
psql -c "CREATE EXTENSION IF NOT EXISTS tablefunc" $db


# aggregate data by zillow neighborhood
psql -f $SQL/CREATE-TABLE-zillow_race.sql $db
psql -f $SQL/CREATE-TABLE-zillow_income.sql $db
psql -f $SQL/CREATE-TABLE-zillow_education.sql $db
psql -f $SQL/CREATE-TABLE-zillow_crime.sql $db
psql -f $SQL/CREATE-TABLE-zillow_violent_crime.sql $db
psql -f $SQL/CREATE-TABLE-zillow_demolitions.sql $db


# build final table with json object for each zillow neighborhood
psql -f $SQL/CREATE-TABLE-zillow_json.sql $db
